{"version":3,"sources":["webpack:///./src/assets/curso/icono-01.svg","webpack:///./src/assets/curso/tema4/img-07.png","webpack:///./src/assets/curso/tema4/icono-01.svg","webpack:///./src/assets/curso/tema4/icono-03.svg","webpack:///./src/assets/curso/tema4/icono-02.svg","webpack:///./src/assets/curso/tema4/icono-05.svg","webpack:///./src/views/Tema4.vue","webpack:///src/views/Tema4.vue","webpack:///./src/views/Tema4.vue?d849","webpack:///./src/views/Tema4.vue?9a82","webpack:///./src/assets/curso/ico.svg","webpack:///./src/assets/curso/tema4/img-01.png","webpack:///./src/assets/curso/tema4/img-04.png","webpack:///./src/assets/curso/tema4/icono-04.svg","webpack:///./src/assets/curso/tema4/img-02.png","webpack:///./src/assets/curso/tema4/img-05.png","webpack:///./src/assets/curso/tema4/img-03.png","webpack:///./src/assets/curso/tema4/img-06.png"],"names":["module","exports","render","_vm","this","_c","_self","staticClass","_m","_v","attrs","require","staticStyle","style","staticRenderFns","name","data","mounted","$nextTick","$aosRefresh","updated","component"],"mappings":"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","file":"js/tema4.e9ea8698.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/icono-01.c6789521.svg\";","module.exports = __webpack_public_path__ + \"img/img-07.0ebaf94a.png\";","module.exports = __webpack_public_path__ + \"img/icono-01.a135b175.svg\";","module.exports = __webpack_public_path__ + \"img/icono-03.d4700c3c.svg\";","module.exports = __webpack_public_path__ + \"img/icono-02.08ddab75.svg\";","module.exports = __webpack_public_path__ + \"img/icono-05.d830f2a2.svg\";","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"curso-main-container pb-3\"},[_c('BannerInterno'),_c('div',{staticClass:\"container tarjeta tarjeta--blanca p-4 p-md-5 mb-5\"},[_vm._m(0),_vm._m(1),_c('Separador'),_vm._m(2),_vm._m(3),_vm._m(4),_c('Separador'),_vm._m(5),_c('p',{staticClass:\"mb-5\"},[_vm._v(\"Las arquitecturas de bases de datos han evolucionado desde sistemas monolíticos y centralizados hasta ecosistemas distribuidos y elásticos en la nube. De acuerdo con Özsu & Valduriez (2011), se clasifican en:\")]),_c('div',{staticClass:\"row justify-content-center mb-4\"},[_vm._m(6),_c('div',{staticClass:\"col-lg-9 mb-md-0 order-lg-2 order-2\",attrs:{\"data-aos\":\"fade-left\"}},[_c('LineaTiempoD',{staticClass:\"color-acento-botones especial\"},[_c('p',{attrs:{\"numero\":\"1\",\"titulo\":\"Arquitectura centralizada\"}},[_vm._v(\"Tanto los datos como el SGBD se encuentran en un solo servidor o clúster en una ubicación específica. Los usuarios y las aplicaciones acceden a este punto central. Es sencillo de administrar, ofrece alta seguridad (ya que solo hay un punto que proteger) y garantiza la consistencia de los datos. Sin embargo, presenta la desventaja de ser un único punto de fallo. La capacidad de escalar está limitada por el servidor (escalado vertical). La latencia puede ser elevada para usuarios que se encuentran a gran distancia geográfica. Se suele usar en pequeñas y medianas empresas, aplicaciones departamentales.\")]),_c('p',{attrs:{\"numero\":\"2\",\"titulo\":\"Arquitectura descentralizada\"}},[_vm._v(\"Se caracteriza por la presencia de múltiples bases de datos autónomas, cada una con su propio Sistema de Gestión de Bases de Datos (SGBD) y datos, que pueden estar ubicadas en diferentes localizaciones. No comparten un control centralizado y tienen la capacidad de operar de manera independiente. Un ejemplo de este tipo de sistemas es aquellos basados en la tecnología \"),_c('em',[_vm._v(\"blockchain.\")]),_vm._v(\" Como desventaja se tiene que la consistencia global de los datos es muy difícil de lograr.\")]),_c('p',{attrs:{\"numero\":\"3\",\"titulo\":\"Arquitectura distribuida\"}},[_vm._v(\"Se refiere a un sistema de base de datos dividido físicamente en múltiples servidores (nodos), ubicados en diferentes localizaciones. Los nodos se comunican mediante una red y colaboran para ofrecer una vista unificada de los datos. Este paradigma predomina en aplicaciones a gran escala. Sus ventajas incluyen alta escalabilidad (permite añadir nodos para gestionar mayor carga), alta disponibilidad (si un nodo falla, otros asumen su función) y baja latencia (los datos pueden ubicarse cerca de usuarios). Como desventaja, presenta mayor complejidad de gestión, y garantizar la consistencia entre nodos es un desafío técnico (consistencia eventual vs. fuerte). Se suele aplicar en aplicaciones web globales, redes sociales, IoT, Big Data.\")]),_c('p',{attrs:{\"numero\":\"4\",\"titulo\":\"Arquitectura en la Nube (DBaaS - Database as a Service)\"}},[_vm._v(\"Es una forma de arquitectura distribuida donde un proveedor de la nube (como Amazon Web Services, Google Cloud o Microsoft Azure) gestiona la infraestructura de la base de datos. El cliente simplemente consume la base de datos como un servicio a través de una API o un panel de control. Permite una gran elasticidad (se puede escalar hacia arriba o hacia abajo bajo demanda), pago por uso, gestión simplificada (el proveedor se encarga de los parches, respaldos, etc.), alta disponibilidad y durabilidad incorporadas, sin embargo, dentro de sus desventajas se tiene la dependencia de un proveedor, preocupaciones sobre la seguridad y soberanía de los datos para ciertas industrias. Su aplicación se ve en \"),_c('em',[_vm._v(\"startups\")]),_vm._v(\" hasta grandes empresas que buscan agilidad y reducir la carga operativa.\")])])],1)]),_c('Separador'),_vm._m(7),_c('p',{staticClass:\"mb-5\"},[_vm._v(\"En las arquitecturas distribuidas, hay dos métodos esenciales para dividir y manejar los datos entre los nodos (Kleppmann, 2017):\")]),_vm._m(8),_c('p',{staticClass:\"mb-5\"},[_vm._v(\"Implica el mantenimiento de copias idénticas de los datos en múltiples nodos, principalmente para asegurar una alta disponibilidad y mejorar el rendimiento de lectura. En caso de que el nodo principal (maestro) falle, una de las réplicas (esclavo) puede ser promovida para asumir su función, minimizando así el tiempo de inactividad. Además, las solicitudes de lectura pueden distribuirse entre las réplicas para evitar la sobrecarga del maestro. Dentro de los modelos en esta arquitectura se tiene a los modelos:\")]),_c('TabsC',{staticClass:\"color-acento-botones mb-5\",attrs:{\"data-aos\":\"fade-right\"}},[_c('div',{staticClass:\"py-3 py-md-4\",attrs:{\"titulo\":\"Maestro-Esclavo\"}},[_c('div',{staticClass:\"row justify-content-center p-4\"},[_c('div',{staticClass:\"col-lg-6 col-8 mb-lg-0 mb-4\"},[_c('figure',[_c('img',{attrs:{\"src\":require(\"@/assets/curso/tema4/img-04.png\"),\"alt\":\"Imagen decorativa\"}})])]),_c('div',{staticClass:\"col-lg-6\"},[_c('p',{staticClass:\"mb-0\"},[_vm._v(\"Todas las operaciones de escritura se realizan en el nodo maestro, el cual posteriormente propaga los cambios a los nodos esclavos. Las operaciones de lectura pueden llevarse a cabo desde cualquier nodo. Este modelo es el más comúnmente utilizado. \")])])])]),_c('div',{staticClass:\"py-3 py-md-4\",attrs:{\"titulo\":\"Multi-Maestro\"}},[_c('div',{staticClass:\"row justify-content-center p-4\"},[_c('div',{staticClass:\"col-lg-6 col-8 mb-lg-0 mb-4\"},[_c('figure',[_c('img',{attrs:{\"src\":require(\"@/assets/curso/tema4/img-05.png\"),\"alt\":\"Imagen decorativa\"}})])]),_c('div',{staticClass:\"col-lg-6\"},[_c('p',{staticClass:\"mb-0\"},[_vm._v(\"Varios nodos tienen la capacidad de aceptar escrituras. Este enfoque es beneficioso para aplicaciones distribuidas geográficamente, ya que reduce la latencia de escritura; sin embargo, introduce una considerable complejidad en la resolución de conflictos de escritura, especialmente cuando dos usuarios modifican simultáneamente el mismo dato en diferentes nodos maestros.\")])])])])]),_c('p',{staticClass:\"mb-5\"},[_vm._v(\"Es importante tener presente que en este tipo de método de funcionamiento puede haber un pequeño retraso entre el momento en que se escribe en el maestro y el momento en que la escritura se refleja en los esclavos. Leer desde un esclavo podría devolver datos obsoletos, un concepto conocido como consistencia eventual.\")]),_vm._m(9),_vm._m(10),_c('div',{staticClass:\"bloque-texto-g color-secundario p-3 p-sm-4 p-md-5 mb-5\",staticStyle:{\"background-color\":\"#DCD8F2\"}},[_c('div',{staticClass:\"bloque-texto-g__img\",style:({'background-image': `url(${require('@/assets/curso/tema4/img-07.png')})`}),attrs:{\"data-aos\":\"fade-right\"}}),_vm._m(11)]),_vm._m(12)],1)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"titulo-principal color-acento-contenido\"},[_c('div',{staticClass:\"titulo-principal__numero\",attrs:{\"data-aos\":\"fade-right\"}},[_c('span',[_vm._v(\"4\")])]),_c('h1',[_vm._v(\"Arquitectura de bases de datos\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"row justify-content-center mb-4\",attrs:{\"data-aos\":\"fade-right\"}},[_c('div',{staticClass:\"col-lg-10\"},[_c('div',{staticClass:\"row justify-content-center align-items-center tarjeta tarjeta--BG08 p-lg-0 p-4\",staticStyle:{\"background-color\":\"#DCD8F2\"}},[_c('div',{staticClass:\"col-lg-3 col-md-6 col-8 mb-lg-0 mb-4 px-0\"},[_c('img',{attrs:{\"src\":require(\"@/assets/curso/tema4/img-01.png\"),\"alt\":\"Imagen decorativa\"}})]),_c('div',{staticClass:\"col-lg-9 mb-md-0 px-4\"},[_c('p',{staticClass:\"mb-0\"},[_vm._v(\"La arquitectura de una base de datos se refiere al diseño integral del sistema que la sustenta. No se limita únicamente al Sistema de Gestión de Bases de Datos (SGBD), sino que abarca la integración del \"),_c('em',[_vm._v(\"hardware\")]),_vm._v(\", el \"),_c('em',[_vm._v(\"software\")]),_vm._v(\", las redes y las estrategias de distribución de datos para satisfacer los requisitos de rendimiento, disponibilidad, escalabilidad y seguridad de una aplicación.\")])])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"titulo-segundo color-acento-contenido\",attrs:{\"id\":\"t_4_1\",\"data-aos\":\"fade-right\"}},[_c('h2',[_vm._v(\"4.1 Concepto\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-8 order-lg-1 order-2\",attrs:{\"data-aos\":\"fade-right\"}},[_c('div',{staticClass:\"row mb-4\"},[_c('div',{staticClass:\"col\"},[_c('p',{staticClass:\"mb-0\"},[_vm._v(\"La arquitectura de una base de datos constituye el esquema que detalla la organización, interconexión y gestión de los diversos componentes de un sistema de datos. Una arquitectura bien diseñada busca equilibrar objetivos que frecuentemente están en conflicto:\")])])]),_c('div',{staticClass:\"tarjeta tarjeta--BGC01 p-3 mb-0\",staticStyle:{\"background-color\":\"#FFEBF1\"}},[_c('div',{staticClass:\"row justify-content-center align-items-center mb-2\"},[_c('div',{staticClass:\"col-auto mb-4\"},[_c('figure',[_c('img',{attrs:{\"src\":require(\"@/assets/curso/tema4/icono-01.svg\"),\"alt\":\"Imagen decorativa\"}})])]),_c('div',{staticClass:\"col-10\"},[_c('p',{staticClass:\"mb-0\"},[_c('b',[_vm._v(\"Rendimiento frente a costo\")])]),_c('p',{staticClass:\"mb-0\"},[_vm._v(\"Un sistema que ofrece un rendimiento extremadamente alto puede necesitar \"),_c('em',[_vm._v(\"hardware\")]),_vm._v(\" de alto costo. \")])])]),_c('div',{staticClass:\"row justify-content-center align-items-center mb-2\"},[_c('div',{staticClass:\"col-auto mb-4\"},[_c('figure',[_c('img',{attrs:{\"src\":require(\"@/assets/curso/tema4/icono-02.svg\"),\"alt\":\"Imagen decorativa\"}})])]),_c('div',{staticClass:\"col-10\"},[_c('p',{staticClass:\"mb-0\"},[_c('b',[_vm._v(\"Consistencia frente a disponibilidad\")])]),_c('p',{staticClass:\"mb-0\"},[_vm._v(\"En los sistemas distribuidos, asegurar una consistencia rigurosa en todos los nodos puede comprometer la disponibilidad si la red presenta fallos (Teorema CAP). \")])])]),_c('div',{staticClass:\"row justify-content-center align-items-center mb-2\"},[_c('div',{staticClass:\"col-auto mb-4\"},[_c('figure',[_c('img',{attrs:{\"src\":require(\"@/assets/curso/tema4/icono-03.svg\"),\"alt\":\"Imagen decorativa\"}})])]),_c('div',{staticClass:\"col-10\"},[_c('p',{staticClass:\"mb-0\"},[_c('b',[_vm._v(\"Seguridad frente a usabilidad\")])]),_c('p',{staticClass:\"mb-0\"},[_vm._v(\"Controles de seguridad excesivamente estrictos pueden complicar el acceso legítimo a la información.\")])])])])]),_c('div',{staticClass:\"col-lg-4 col-md-6 col-8 order-lg-2 order-1 mb-lg-0 mb-4\",attrs:{\"data-aos\":\"fade-left\"}},[_c('figure',[_c('img',{attrs:{\"src\":require(\"@/assets/curso/tema4/img-02.png\"),\"alt\":\"Imagen decorativa\"}})])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"row mb-4\"},[_c('div',{staticClass:\"col-auto d-none d-lg-block\"},[_c('figure',[_c('img',{attrs:{\"src\":require(\"@/assets/curso/icono-01.svg\"),\"alt\":\"Imagen decorativa\"}})])]),_c('div',{staticClass:\"col-10\"},[_c('p',{staticClass:\"mb-0\"},[_vm._v(\"La elección de una arquitectura depende críticamente de la naturaleza de la aplicación. Un \"),_c('em',[_vm._v(\"blog\")]),_vm._v(\" personal con pocos visitantes, tiene requisitos arquitectónicos radicalmente diferentes a los de un sistema de comercio electrónico global o una plataforma de redes sociales.\")])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"titulo-segundo color-acento-contenido\",attrs:{\"id\":\"t_4_2\",\"data-aos\":\"fade-right\"}},[_c('h2',[_vm._v(\"4.2 Tipos\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"col-lg-3 col-md-6 col-8 mb-lg-0 mb-4\",attrs:{\"data-aos\":\"fade-right\"}},[_c('img',{attrs:{\"src\":require(\"@/assets/curso/tema4/img-03.png\"),\"alt\":\"Imagen decorativa\"}})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"titulo-segundo color-acento-contenido\",attrs:{\"id\":\"t_4_3\",\"data-aos\":\"fade-right\"}},[_c('h2',[_vm._v(\"4.3 Métodos de funcionamiento\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"row mb-4 ms-0\"},[_c('div',{staticClass:\"col-auto bg-c3\",attrs:{\"data-aos\":\"fade-left\"}},[_c('div',{staticClass:\"row align-items-center\"},[_c('div',{staticClass:\"col-auto px-0\"},[_c('figure',[_c('img',{staticStyle:{\"width\":\"40px\"},attrs:{\"src\":require(\"@/assets/curso/ico.svg\"),\"alt\":\"\"}})])]),_c('div',{staticClass:\"col\"},[_c('h3',{staticClass:\"mb-0\"},[_vm._v(\"A. Replicación\")])])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"row mb-4 ms-0\"},[_c('div',{staticClass:\"col-auto bg-c3\",attrs:{\"data-aos\":\"fade-left\"}},[_c('div',{staticClass:\"row align-items-center\"},[_c('div',{staticClass:\"col-auto px-0\"},[_c('figure',[_c('img',{staticStyle:{\"width\":\"40px\"},attrs:{\"src\":require(\"@/assets/curso/ico.svg\"),\"alt\":\"\"}})])]),_c('div',{staticClass:\"col\"},[_c('h3',{staticClass:\"mb-0\"},[_vm._v(\"B. Particionamiento o fragmentación\")])])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"row mb-5\"},[_c('div',{staticClass:\"col-lg-8\",attrs:{\"data-aos\":\"fade-right\"}},[_c('p',[_vm._v(\"La base de datos se divide en particiones más pequeñas, llamadas \"),_c('em',[_vm._v(\"shards,\")]),_vm._v(\" y cada \"),_c('em',[_vm._v(\"shard\")]),_vm._v(\" es almacena en un nodo diferente. Cada nodo es responsable de un subconjunto de los datos. Cuando una base de datos se vuelve demasiado grande para un solo servidor o el volumen de escrituras es demasiado alto, el particionamiento permite distribuir la carga entre muchos servidores. Para crear las particiones se suelen utilizar estrategias como:\")]),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-lg-6 px-4 mb-lg-0 mb-4\"},[_c('div',{staticClass:\"row justify-content-center bg-11 p-3 h-100\",staticStyle:{\"background-color\":\"#DCD8F2\",\"border-radius\":\"20px\"}},[_c('figure',[_c('img',{staticClass:\"mb-2\",staticStyle:{\"width\":\"60px\"},attrs:{\"src\":require(\"@/assets/curso/tema4/icono-04.svg\"),\"alt\":\"\"}})]),_c('p',{staticClass:\"mb-0\"},[_c('b',[_vm._v(\"Basado en rango\")])]),_c('p',{staticClass:\"mb-0\"},[_vm._v(\"Se asignan rangos de la clave de particionamiento a diferentes \"),_c('em',[_vm._v(\"shards\")]),_vm._v(\" (p.ej., usuarios con ID de 1 a 1,000,000 en el shard 1; 1,000,001 a 2,000,000 en el shard 2).\")])])]),_c('div',{staticClass:\"col-lg-6 px-4 mb-lg-0 mb-4\"},[_c('div',{staticClass:\"row justify-content-center bg-11 p-3 h-100\",staticStyle:{\"background-color\":\"#DCD8F2\",\"border-radius\":\"20px\"}},[_c('figure',[_c('img',{staticClass:\"mb-2\",staticStyle:{\"width\":\"50px\"},attrs:{\"src\":require(\"@/assets/curso/tema4/icono-05.svg\"),\"alt\":\"\"}})]),_c('p',{staticClass:\"mb-0\"},[_c('b',[_vm._v(\"Basado en \"),_c('em',[_vm._v(\"hash\")])])]),_c('p',{staticClass:\"mb-0\"},[_vm._v(\"Se aplica una función \"),_c('em',[_vm._v(\"hash\")]),_vm._v(\" a la clave de particionamiento y el resultado determina en qué \"),_c('em',[_vm._v(\"shard\")]),_vm._v(\" se almacenan los datos. Esto distribuye los datos de manera más uniforme, pero dificulta las consultas por rango.\")])])])])]),_c('div',{staticClass:\"col-lg-4 d-none d-lg-block\",attrs:{\"data-aos\":\"fade-left\"}},[_c('figure',[_c('img',{staticClass:\"m-auto\",staticStyle:{\"width\":\"400px\"},attrs:{\"src\":require(\"@/assets/curso/tema4/img-06.png\"),\"alt\":\"\"}})])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"bloque-texto-g__texto p-4\",attrs:{\"data-aos\":\"fade-left\"}},[_c('p',{staticClass:\"mb-0\"},[_vm._v(\"La complejidad de las consultas abarca múltiples \"),_c('em',[_vm._v(\"shards.\")]),_vm._v(\" El enrutamiento de consultas se vuelve más complicado y las operaciones de \"),_c('em',[_vm._v(\"JOIN\")]),_vm._v(\" entre \"),_c('em',[_vm._v(\"shards\")]),_vm._v(\" pueden ser muy ineficientes. El re-particionamiento \"),_c('em',[_vm._v(\"(re-sharding)\")]),_vm._v(\" cuando se agregan nuevos nodos, también es una operación delicada.\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"row mb-4\"},[_c('div',{staticClass:\"col-auto d-none d-lg-block\"},[_c('figure',[_c('img',{attrs:{\"src\":require(\"@/assets/curso/icono-01.svg\"),\"alt\":\"Imagen decorativa\"}})])]),_c('div',{staticClass:\"col-10\"},[_c('p',{staticClass:\"mb-0\"},[_vm._v(\"En la práctica, las arquitecturas a gran escala, suelen integrar tanto la replicación como el particionamiento. Cada \"),_c('em',[_vm._v(\"shard\")]),_vm._v(\" o partición de datos, se replica en múltiples nodos para asegurar tanto la escalabilidad como la alta disponibilidad. Este enfoque es comúnmente adoptado por la mayoría de las grandes bases de datos NoSQL y los servicios de bases de datos en la nube.\")])])])\n}]\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\n.curso-main-container.pb-3\n  BannerInterno\n  .container.tarjeta.tarjeta--blanca.p-4.p-md-5.mb-5\n    .titulo-principal.color-acento-contenido\n      .titulo-principal__numero(data-aos=\"fade-right\")\n        span 4\n      h1 Arquitectura de bases de datos\n    \n    .row.justify-content-center.mb-4(data-aos=\"fade-right\")\n      .col-lg-10\n        .row.justify-content-center.align-items-center.tarjeta.tarjeta--BG08.p-lg-0.p-4(style=\"background-color:#DCD8F2\")\n          .col-lg-3.col-md-6.col-8.mb-lg-0.mb-4.px-0\n            img(src='@/assets/curso/tema4/img-01.png', alt='Imagen decorativa')\n          .col-lg-9.mb-md-0.px-4\n            p.mb-0 La arquitectura de una base de datos se refiere al diseño integral del sistema que la sustenta. No se limita únicamente al Sistema de Gestión de Bases de Datos (SGBD), sino que abarca la integración del #[em hardware], el #[em software], las redes y las estrategias de distribución de datos para satisfacer los requisitos de rendimiento, disponibilidad, escalabilidad y seguridad de una aplicación.\n           \n\n    Separador\n    #t_4_1.titulo-segundo.color-acento-contenido(data-aos=\"fade-right\")\n      h2 4.1 Concepto\n\n    .row.justify-content-center.mb-5\n      .col-lg-8.order-lg-1.order-2(data-aos=\"fade-right\")\n        .row.mb-4\n          .col\n            p.mb-0 La arquitectura de una base de datos constituye el esquema que detalla la organización, interconexión y gestión de los diversos componentes de un sistema de datos. Una arquitectura bien diseñada busca equilibrar objetivos que frecuentemente están en conflicto:\n        .tarjeta.tarjeta--BGC01.p-3.mb-0(style=\"background-color:#FFEBF1\")\n          .row.justify-content-center.align-items-center.mb-2\n            .col-auto.mb-4\n              figure\n                img(src='@/assets/curso/tema4/icono-01.svg', alt='Imagen decorativa')\n            .col-10\n              p.mb-0 #[b Rendimiento frente a costo]\n              p.mb-0 Un sistema que ofrece un rendimiento extremadamente alto puede necesitar #[em hardware] de alto costo. \n          .row.justify-content-center.align-items-center.mb-2\n            .col-auto.mb-4\n              figure\n                img(src='@/assets/curso/tema4/icono-02.svg', alt='Imagen decorativa')\n            .col-10\n              p.mb-0 #[b Consistencia frente a disponibilidad]\n              p.mb-0 En los sistemas distribuidos, asegurar una consistencia rigurosa en todos los nodos puede comprometer la disponibilidad si la red presenta fallos (Teorema CAP). \n          .row.justify-content-center.align-items-center.mb-2\n            .col-auto.mb-4\n              figure\n                img(src='@/assets/curso/tema4/icono-03.svg', alt='Imagen decorativa')\n            .col-10\n              p.mb-0 #[b Seguridad frente a usabilidad]\n              p.mb-0 Controles de seguridad excesivamente estrictos pueden complicar el acceso legítimo a la información.\n      .col-lg-4.col-md-6.col-8.order-lg-2.order-1.mb-lg-0.mb-4(data-aos=\"fade-left\")\n        figure\n          img(src='@/assets/curso/tema4/img-02.png', alt='Imagen decorativa')\n\n    .row.mb-4\n      .col-auto.d-none.d-lg-block\n        figure\n          img(src='@/assets/curso/icono-01.svg', alt='Imagen decorativa')\n      .col-10\n        p.mb-0 La elección de una arquitectura depende críticamente de la naturaleza de la aplicación. Un #[em blog] personal con pocos visitantes, tiene requisitos arquitectónicos radicalmente diferentes a los de un sistema de comercio electrónico global o una plataforma de redes sociales.\n\n    Separador\n\n    #t_4_2.titulo-segundo.color-acento-contenido(data-aos=\"fade-right\")\n      h2 4.2 Tipos\n\n    p.mb-5 Las arquitecturas de bases de datos han evolucionado desde sistemas monolíticos y centralizados hasta ecosistemas distribuidos y elásticos en la nube. De acuerdo con Özsu & Valduriez (2011), se clasifican en:\n\n    .row.justify-content-center.mb-4\n      .col-lg-3.col-md-6.col-8.mb-lg-0.mb-4(data-aos=\"fade-right\")\n        img(src='@/assets/curso/tema4/img-03.png', alt='Imagen decorativa')\n      .col-lg-9.mb-md-0.order-lg-2.order-2(data-aos=\"fade-left\")\n        LineaTiempoD.color-acento-botones.especial\n          p(numero=\"1\" titulo=\"Arquitectura centralizada\") Tanto los datos como el SGBD se encuentran en un solo servidor o clúster en una ubicación específica. Los usuarios y las aplicaciones acceden a este punto central. Es sencillo de administrar, ofrece alta seguridad (ya que solo hay un punto que proteger) y garantiza la consistencia de los datos. Sin embargo, presenta la desventaja de ser un único punto de fallo. La capacidad de escalar está limitada por el servidor (escalado vertical). La latencia puede ser elevada para usuarios que se encuentran a gran distancia geográfica. Se suele usar en pequeñas y medianas empresas, aplicaciones departamentales.\n          p(numero=\"2\" titulo=\"Arquitectura descentralizada\") Se caracteriza por la presencia de múltiples bases de datos autónomas, cada una con su propio Sistema de Gestión de Bases de Datos (SGBD) y datos, que pueden estar ubicadas en diferentes localizaciones. No comparten un control centralizado y tienen la capacidad de operar de manera independiente. Un ejemplo de este tipo de sistemas es aquellos basados en la tecnología #[em blockchain.] Como desventaja se tiene que la consistencia global de los datos es muy difícil de lograr.\n          p(numero=\"3\" titulo=\"Arquitectura distribuida\") Se refiere a un sistema de base de datos dividido físicamente en múltiples servidores (nodos), ubicados en diferentes localizaciones. Los nodos se comunican mediante una red y colaboran para ofrecer una vista unificada de los datos. Este paradigma predomina en aplicaciones a gran escala. Sus ventajas incluyen alta escalabilidad (permite añadir nodos para gestionar mayor carga), alta disponibilidad (si un nodo falla, otros asumen su función) y baja latencia (los datos pueden ubicarse cerca de usuarios). Como desventaja, presenta mayor complejidad de gestión, y garantizar la consistencia entre nodos es un desafío técnico (consistencia eventual vs. fuerte). Se suele aplicar en aplicaciones web globales, redes sociales, IoT, Big Data.\n          p(numero=\"4\" titulo=\"Arquitectura en la Nube (DBaaS - Database as a Service)\") Es una forma de arquitectura distribuida donde un proveedor de la nube (como Amazon Web Services, Google Cloud o Microsoft Azure) gestiona la infraestructura de la base de datos. El cliente simplemente consume la base de datos como un servicio a través de una API o un panel de control. Permite una gran elasticidad (se puede escalar hacia arriba o hacia abajo bajo demanda), pago por uso, gestión simplificada (el proveedor se encarga de los parches, respaldos, etc.), alta disponibilidad y durabilidad incorporadas, sin embargo, dentro de sus desventajas se tiene la dependencia de un proveedor, preocupaciones sobre la seguridad y soberanía de los datos para ciertas industrias. Su aplicación se ve en #[em startups] hasta grandes empresas que buscan agilidad y reducir la carga operativa.\n  \n    Separador\n    #t_4_3.titulo-segundo.color-acento-contenido(data-aos=\"fade-right\")\n      h2 4.3 Métodos de funcionamiento\n\n    p.mb-5 En las arquitecturas distribuidas, hay dos métodos esenciales para dividir y manejar los datos entre los nodos (Kleppmann, 2017):\n\n    .row.mb-4.ms-0\n      .col-auto.bg-c3(data-aos=\"fade-left\")\n        .row.align-items-center\n          .col-auto.px-0\n            figure\n              img(src='@/assets/curso/ico.svg', alt='', style='width: 40px')\n          .col\n            h3.mb-0 A. Replicación\n\n    p.mb-5 Implica el mantenimiento de copias idénticas de los datos en múltiples nodos, principalmente para asegurar una alta disponibilidad y mejorar el rendimiento de lectura. En caso de que el nodo principal (maestro) falle, una de las réplicas (esclavo) puede ser promovida para asumir su función, minimizando así el tiempo de inactividad. Además, las solicitudes de lectura pueden distribuirse entre las réplicas para evitar la sobrecarga del maestro. Dentro de los modelos en esta arquitectura se tiene a los modelos:\n\n    TabsC.color-acento-botones.mb-5(data-aos=\"fade-right\")\n      .py-3.py-md-4(titulo=\"Maestro-Esclavo\")\n        .row.justify-content-center.p-4\n          .col-lg-6.col-8.mb-lg-0.mb-4\n            figure\n              img(src='@/assets/curso/tema4/img-04.png', alt='Imagen decorativa')\n          .col-lg-6\n            p.mb-0 Todas las operaciones de escritura se realizan en el nodo maestro, el cual posteriormente propaga los cambios a los nodos esclavos. Las operaciones de lectura pueden llevarse a cabo desde cualquier nodo. Este modelo es el más comúnmente utilizado. \n      .py-3.py-md-4(titulo=\"Multi-Maestro\")\n        .row.justify-content-center.p-4\n          .col-lg-6.col-8.mb-lg-0.mb-4\n            figure\n              img(src='@/assets/curso/tema4/img-05.png', alt='Imagen decorativa')\n          .col-lg-6\n            p.mb-0 Varios nodos tienen la capacidad de aceptar escrituras. Este enfoque es beneficioso para aplicaciones distribuidas geográficamente, ya que reduce la latencia de escritura; sin embargo, introduce una considerable complejidad en la resolución de conflictos de escritura, especialmente cuando dos usuarios modifican simultáneamente el mismo dato en diferentes nodos maestros.\n\n    p.mb-5 Es importante tener presente que en este tipo de método de funcionamiento puede haber un pequeño retraso entre el momento en que se escribe en el maestro y el momento en que la escritura se refleja en los esclavos. Leer desde un esclavo podría devolver datos obsoletos, un concepto conocido como consistencia eventual.\n\n    .row.mb-4.ms-0\n      .col-auto.bg-c3(data-aos=\"fade-left\")\n        .row.align-items-center\n          .col-auto.px-0\n            figure\n              img(src='@/assets/curso/ico.svg', alt='', style='width: 40px')\n          .col\n            h3.mb-0 B. Particionamiento o fragmentación\n\n    .row.mb-5\n      .col-lg-8(data-aos=\"fade-right\")\n        p La base de datos se divide en particiones más pequeñas, llamadas #[em shards,] y cada #[em shard] es almacena en un nodo diferente. Cada nodo es responsable de un subconjunto de los datos. Cuando una base de datos se vuelve demasiado grande para un solo servidor o el volumen de escrituras es demasiado alto, el particionamiento permite distribuir la carga entre muchos servidores. Para crear las particiones se suelen utilizar estrategias como:\n        .row\n          .col-lg-6.px-4.mb-lg-0.mb-4\n            .row.justify-content-center.bg-11.p-3.h-100(style=\"background-color:#DCD8F2; border-radius:20px\")\n              figure\n                img.mb-2(src=\"@/assets/curso/tema4/icono-04.svg\", alt=\"\", style=\"width: 60px\")\n              p.mb-0 #[b Basado en rango]\n              p.mb-0 Se asignan rangos de la clave de particionamiento a diferentes #[em shards] (p.ej., usuarios con ID de 1 a 1,000,000 en el shard 1; 1,000,001 a 2,000,000 en el shard 2).\n          .col-lg-6.px-4.mb-lg-0.mb-4\n            .row.justify-content-center.bg-11.p-3.h-100(style=\"background-color:#DCD8F2; border-radius:20px\")\n              figure\n                img.mb-2(src=\"@/assets/curso/tema4/icono-05.svg\", alt=\"\", style=\"width: 50px\")\n              p.mb-0 #[b Basado en #[em hash]]\n              p.mb-0 Se aplica una función #[em hash] a la clave de particionamiento y el resultado determina en qué #[em shard] se almacenan los datos. Esto distribuye los datos de manera más uniforme, pero dificulta las consultas por rango.\n      .col-lg-4.d-none.d-lg-block(data-aos=\"fade-left\")\n        figure\n          img(src='@/assets/curso/tema4/img-06.png', alt='', style=\"width: 400px\").m-auto\n    \n    .bloque-texto-g.color-secundario.p-3.p-sm-4.p-md-5.mb-5(style=\"background-color:#DCD8F2\")\n      .bloque-texto-g__img(\n        :style=\"{'background-image': `url(${require('@/assets/curso/tema4/img-07.png')})`}\" data-aos=\"fade-right\"\n      )\n      .bloque-texto-g__texto.p-4(data-aos=\"fade-left\")\n        p.mb-0 La complejidad de las consultas abarca múltiples #[em shards.] El enrutamiento de consultas se vuelve más complicado y las operaciones de #[em JOIN] entre #[em shards] pueden ser muy ineficientes. El re-particionamiento #[em (re-sharding)] cuando se agregan nuevos nodos, también es una operación delicada.\n\n    .row.mb-4\n      .col-auto.d-none.d-lg-block\n        figure\n          img(src='@/assets/curso/icono-01.svg', alt='Imagen decorativa')\n      .col-10\n        p.mb-0 En la práctica, las arquitecturas a gran escala, suelen integrar tanto la replicación como el particionamiento. Cada #[em shard] o partición de datos, se replica en múltiples nodos para asegurar tanto la escalabilidad como la alta disponibilidad. Este enfoque es comúnmente adoptado por la mayoría de las grandes bases de datos NoSQL y los servicios de bases de datos en la nube.\n\n\n</template>\n\n<script>\nexport default {\n  name: 'Tema4',\n  data: () => ({\n    // variables de vue\n  }),\n  mounted() {\n    this.$nextTick(() => {\n      this.$aosRefresh()\n    })\n  },\n  updated() {\n    this.$aosRefresh()\n  },\n}\n</script>\n\n<style lang=\"sass\"></style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tema4.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tema4.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Tema4.vue?vue&type=template&id=90c6e010&lang=pug\"\nimport script from \"./Tema4.vue?vue&type=script&lang=js\"\nexport * from \"./Tema4.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = __webpack_public_path__ + \"img/ico.e45fad04.svg\";","module.exports = __webpack_public_path__ + \"img/img-01.c4758dfb.png\";","module.exports = __webpack_public_path__ + \"img/img-04.12da219f.png\";","module.exports = __webpack_public_path__ + \"img/icono-04.0e876f10.svg\";","module.exports = __webpack_public_path__ + \"img/img-02.c4bfc4cd.png\";","module.exports = __webpack_public_path__ + \"img/img-05.151a0d4e.png\";","module.exports = __webpack_public_path__ + \"img/img-03.51037793.png\";","module.exports = __webpack_public_path__ + \"img/img-06.b51755a2.png\";"],"sourceRoot":""}